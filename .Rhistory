par(mfrow = c(1, 2))
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue",freq=T)
hist(chara, breaks = 100, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
summary(nba$球员薪金)
for(i in 1:397){}
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
for(i in 1:397){
if(nba$球员薪金[i]<-500) a=a+1
}
a
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
b = 0
for(i in 1:397){
if(nba$球员薪金[i]<-500) b=b+1
}
b
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
b = 0
for(i in 1:397){
if(nba$球员薪金[i]<=500) b=b+1
}
b
nba$球员薪金[1]
nba$球员薪金[2]
nba$球员薪金[300]
nba$球员薪金
rm(list = ls())
nba = read.csv("NBA.csv")
head(nba)
par(family = 'STKaiti')
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
b = 0
for(i in 1:397){
if(nba$球员薪金[i]<=500) b=b+1
}
b
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
b=0
for(i in 1:397){
if(nba$球员薪金[i]<=500){
b=b+1
}
}
b
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
b=0
for(i in 1:397){
if(nba$球员薪金[i]<=1000){
b=b+1
}
}
b
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
b=0
for(i in 1:397){
if(nba$球员薪金[i]<=1500){
b=b+1
}
}
b
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
b=0
for(i in 1:397){
if(nba$球员薪金[i]<=2000){
b=b+1
}
}
b
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
b=0
for(i in 1:397){
if(nba$球员薪金[i]<=2500){
b=b+1
}
}
b
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
b=0
for(i in 1:397){
if(nba$球员薪金[i]<=3000){
b=b+1
}
}
b
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
b=0
for(i in 1:397){
if(nba$球员薪金[i]<=3500){
b=b+1
}
}
b
table(nba$球员薪金)
summary(nba$球员薪金)
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
b=0
for(i in 1:397){
if(nba$球员薪金[i]<=728.4){
b=b+1
}
}
b
par(family = 'STKaiti')
## 定性与定量变量--分组箱线图 ##
boxplot(log(nba$球员薪金)~是否入选过全明星, data = nba, col = rainbow(2, alpha = 0.3), ylab = "球员薪金对数")
sumary(nba$是否入选过全明星)
sumamry(nba$是否入选过全明星)
summary(nba$是否入选过全明星)
screeplot(result,type = 'l')
result= princomp(player)
rm(list = ls())
player = read.csv("tennis.csv")
player = player[3:16]
head(player)
par(family = 'STKaiti')
result= princomp(player)
summary(result)
screeplot(result,type = 'l')
result= princomp(player,)
summary(result,loadings = T)
result=princomp(player)
summary(result,loadings=T)
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
rm(list = ls())
nba = read.csv("NBA.csv")
head(nba)
par(family = 'STKaiti')
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
nba = read.csv("NBA.csv")
head(nba)
par(family = 'STKaiti')
par(family = 'STKaiti')
student = read.csv('student.csv)
pairs(student)
par(family = 'STKaiti')
student = read.csv('student.csv')
pairs(student)
par(family = 'STKaiti')
student = read.csv('student.csv')
pairs(student)
# 定量与定量之间--散点图矩阵
par(family = 'STKaiti')
student = read.csv('student.csv')
head(student)
pairs(student)
length(student)
student
由散点图矩阵可知，学科成绩Y1、Y2、Y3彼此之间存在明显的正线性相关关系；而学科成绩Y4、Y5、Y6彼此之间也存在明显的正线性相关关系。且Y1、Y2、Y3与Y4、Y5、Y6之间，两两不存在明显的线性相关关系。说明影响学生Y1、Y2、Y3学科成绩的主因素和影响Y1、Y2、Y3学科成绩的主因素不是同一种学生因素。即存在两种知识水平或能力对Y1、Y2、Y3与Y4、Y5、Y6起到较大的影响。
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
nba = read.csv("NBA.csv")
head(nba)
par(family = 'STKaiti')
par(family = 'STKaiti')
## 定性变量--柱状图 ##
a = table(nba$位置)
a = a[order(a, decreasing = T)]
barplot(a[1:5], names.arg = names(a)[1:5], col = rainbow(5, alpha = 0.4), xlab = "位置", ylab="频数")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
rm(list = ls())
nba = read.csv("NBA.csv")
knitr::opts_chunk$set(echo=TRUE)
rm(list=ls())
player=read.csv("tennis.csv")
player=player[3:16]
head(player)
par(family='STKaiti')
rm(list=ls())
player=read.csv("tennis.csv")
head(player)
par(family='STKaiti')
rm(list=ls())
player=read.csv("tennis.csv")
head(player)
par(family='STKaiti')
rm(list=ls())
player=read.csv("tennis.csv")
player=player[3:16]
head(player)
par(family='STKaiti')
rm(list=ls())
player=read.csv("tennis.csv")
player=player[3:16]//显示第三到第十六列
rm(list=ls())
player=read.csv("tennis.csv")
player=player[3:16]#显示第三到第十六列
head(player)
par(family='STKaiti')
rm(list=ls())
player=read.csv("tennis.csv")
player=player[3:16]#显示第三到第十六列
par(family='STKaiti')
rm(list=ls())
player=read.csv("tennis.csv")
player=player[3:16]#显示第三到第十六列
head(player)#显示前6�6条数据
par(family='STKaiti')
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
nba = read.csv("NBA.csv")
head(nba)
par(family = 'STKaiti')
par(family = 'STKaiti')
## 定性变量--柱状图 ##
a = table(nba$位置)
a = a[order(a, decreasing = T)]
barplot(a[1:5], names.arg = names(a)[1:5], col = rainbow(5, alpha = 0.4), xlab = "位置", ylab="频数")
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500] # 去掉异常值
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
par(family = 'STKaiti')
## 定性与定量变量--分组箱线图 ##
boxplot(log(nba$球员薪金)~是否入选过全明星, data = nba, col = rainbow(2, alpha = 0.3), ylab = "球员薪金对数")
# 定量与定量之间--散点图矩阵
par(family = 'STKaiti')
student = read.csv('student.csv')
head(student)
pairs(student)
pairs
player
rm(list=ls())
player=read.csv("tennis.csv")
player=player[3:16]#显示第三到第十六列
player#显示前6�6条数据
par(family='STKaiti')
rm(list=ls())
player=read.csv("tennis.csv")#导入数据源
player#显示所有数据
par(family='STKaiti')
result=princomp(player)
result=princomp(player)
result=princomp(player)
rm(list=ls())
player=read.csv("tennis.csv")#导入数据源
player=player[3:16]#显示第三到第十六列
player#显示所有数据
par(family='STKaiti')
result=princomp(player)
summary(result,loadings=T)
screeplot(result,type='l')
screeplot(result,type='a')
screeplot(result,type='b')
result=princomp(player)#进行主成分分析
summary(result,loadings=F)//总结主成分分析结果
result=princomp(player)#进行主成分分析
summary(result,loadings=F)#总结主成分分析结果
unlink('GitHub/RTraining/Tennis_cache', recursive = TRUE)
screeplot(result,type='c')#将主成分分析结果，影响指标
screeplot(result,type='d')#将主成分分析结果，影响指标
screeplot(result,type='d')#将主成分分析结果，影响指标
screeplot(result,type='d')#将主成分分析结果，影响指标
screeplot(result,type='e')#将主成分分析结果，影响指标
screeplot(result,type='e')#将主成分分析结果，影响指标
screeplot(result,type='f')#将主成分分析结果，影响指标
screeplot(result,type='g')#将主成分分析结果，影响指标
screeplot(result,type='h')#将主成分分析结果，影响指标
screeplot(result,type='i')#将主成分分析结果，影响指标
screeplot(result,type='k')#将主成分分析结果，影响指标
screeplot(result,type='l')#将主成分分析结果，影响指标
screeplot(result,type='m')#将主成分分析结果，影响指标
screeplot(result,type='n')#将主成分分析结果，影响指标
screeplot(result,type='o')#将主成分分析结果，影响指标
screeplot(result,type='p')#将主成分分析结果，影响指标
screeplot(result,type='q')#将主成分分析结果，影响指标
screeplot(result,type='r')#将主成分分析结果，影响指标
screeplot(result,type='s')#将主成分分析结果，影响指标
screeplot(result,type='t')#将主成分分析结果，影响指标
screeplot(result,type='u')#将主成分分析结果，影响指标
screeplot(result,type='v')#将主成分分析结果，影响指标
screeplot(result,type='w')#将主成分分析结果，影响指标
screeplot(result,type='x')#将主成分分析结果，影响指标
screeplot(result,type='y')#将主成分分析结果，影响指标
screeplot(result,type='z')#将主成分分析结果，影响指标
screeplot(result,type='z')#将主成分分析结果，影响指标
screeplot(result,type='1')#将主成分分析结果，影响指标
screeplot(result,type='2')#将主成分分析结果，影响指标
screeplot(result,type='3')#将主成分分析结果，影响指标
screeplot(result,type='4')#将主成分分析结果，影响指标
screeplot(result,type='5')#将主成分分析结果，影响指标
screeplot(result,type='6')#将主成分分析结果，影响指标
screeplot(result,type='7')#将主成分分析结果，影响指标
screeplot(result,type='8')#将主成分分析结果，影响指标
screeplot(result,type='9')#将主成分分析结果，影响指标
screeplot(result,type='b')#将主成分分析结果，影响指标
result=princomp(player)#进行主成分分析
summary(result,loadings=T)#总结主成分分析结果
rm(list = ls())
nba = read.csv("NBA.csv")#引入数据源
nba
par(family = 'STKaiti')
par(family = 'STKaiti')
## 定性变量--柱状图 ##
a = table(nba$位置)#统计NBA个位置球员人数
barplot(a[1:5], names.arg = names(a)[1:5], col = rainbow(5, alpha = 0.4), xlab = "位置", ylab="频数")
par(family = 'STKaiti')
## 定性变量--柱状图 ##
a = table(nba$位置)#统计NBA个位置球员人数
barplot(a, names.arg = names(a)[1:5], col = rainbow(5, alpha = 0.4), xlab = "位置", ylab="频数")#画出柱状图
par(family = 'STKaiti')
## 定性变量--柱状图 ##
a = table(nba$位置)#统计NBA个位置球员人数
barplot(a, names.arg = names(a), col = rainbow(5, alpha = 0.4), xlab = "位置", ylab="频数")#画出柱状图
par(family = 'STKaiti')
## 定性变量--柱状图 ##
a = table(nba$位置)#统计NBA个位置球员人数
barplot(a, names.arg = names(a), col = rainbow(10, alpha = 0.4), xlab = "位置", ylab="频数")#画出柱状图
par(family = 'STKaiti')
## 定性变量--柱状图 ##
a = table(nba$位置)#统计NBA个位置球员人数
barplot(a, names.arg = names(a),  xlab = "位置", ylab="频数")#画出柱状图
par(family = 'STKaiti')
## 定性变量--柱状图 ##
a = table(nba$位置)#统计NBA个位置球员人数
barplot(a, names.arg = names(a))#画出柱状图
## 定量变量--直方图 ##
par(family = 'STKaiti')
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = nba
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500]
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "", col = "lightblue")
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500]
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数", main = "")
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500]
hist(chara, breaks = 10)
## 定量变量--直方图 ##
par(family = 'STKaiti')
chara = sort(nba$球员薪金)[1:1500]
hist(chara, breaks = 10, xlab = "球员薪金", ylab = "频数")
par(family = 'STKaiti')
## 定性与定量变量--分组箱线图 ##
boxplot(nba$球员薪金~是否入选过全明星, data = nba, col = rainbow(2, alpha = 0.3), ylab = "球员薪金")
rm(list = ls())
par(family('STKaiti'))
par(family='STKaiti')
setwd('GitHub/RTraining/')
hotel <- read.csv("hoteldata.csv")
names(hotel) <- c("hotel_name",        #--酒店名称
"area",              #--酒店地区
"site",              #--酒店地址
"hyg_grade",         #--卫生评分
"ser_grade",         #--服务评分
"fac_grade",         #--设施评分
"loc_grade",         #--位置评分
"evaluate",          #--评价数
"time",              #--装修时间
"type",              #--房间类型
"price",             #--酒店房价
"lon",               #--经度
"lat",               #--纬度
"company",           #--公司
"trip",              #--出行住宿
"school")            #--校园生活
View(a)
View(hotel)
knitr::opts_chunk$set(echo = TRUE)
library("car")                         #支持方差膨胀因子计算
library("readr")                       #支持读入数据
library("corrplot")
par(family='STKaiti')
hotel <- read.csv("hoteldata.csv")
names(hotel) <- c("hotel_name",        #--酒店名称
"area",              #--酒店地区
"site",              #--酒店地址
"hyg_grade",         #--卫生评分
"ser_grade",         #--服务评分
"fac_grade",         #--设施评分
"loc_grade",         #--位置评分
"evaluate",          #--评价数
"time",              #--装修时间
"type",              #--房间类型
"price",             #--酒店房价
"lon",               #--经度
"lat",               #--纬度
"company",           #--公司
"trip",              #--出行住宿
"school")            #--校园生活
hotel$total_grade <- (hotel$hyg_grade+hotel$ser_grade+hotel$fac_grade+hotel$loc_grade)/4
#对装修时间进行处理
hotel$timeCut <- cut(hotel$time, c(0,2015.5,Inf),c("旧装修","新装修"))   #分组函数
#把其他地区作为基准组
hotel$area <- factor(as.character(hotel$area),levels = c("其他城区","东城区","朝阳区","海淀区"))
par(mfrow = c(1,1))
hist(x    = hotel$price,
xlab = "酒店房价分布直方图",                          #x轴标签
ylab = "频数",                                     #y轴标签
ylim = c(0,300),                                  #y轴范围
col  = "lightsteelblue4",                         #颜色为lightsteelblue4
main = "")
#(2)因变量数字特征
median(hotel$price)                                    #酒店房价的中位数
mean(hotel$price)                                      #酒店房价的平均数
#1.2自变量
#(1)酒店因素箱线图
par(mfrow = c(1,2))                                    #1x2画布
hotel$type= factor(hotel$type,levels = c("标准间","商务间","豪华套间"))
boxplot(log(hotel$price)~(hotel$type),                 #画箱线图
col     = "lightsteelblue4",                   #颜色为lightsteelblue4
ylab    = "酒店房价(取对数)",                     #y轴标签
xlab    = "酒店类型",                            #x轴标签
names   = c("标准","商务","豪华套间"))            #分组命名
timeCut <- cut(hotel$time, c(0,2015.5,Inf))
boxplot(log(hotel$price) ~ timeCut,                    #画箱线图
col     = c("lightsteelblue4"),                #颜色为lightsteelblue4
ylab    = "酒店房价(取对数)",                     #y轴标签
xlab    = "装修时间",                           #x轴标签
names   = c("旧装修","新装修"))                  #分组命名
#(2)评分因素相关系数
par(mfrow = c(1,1))                                    #1x1画布
grade <- data.frame(hotel$hyg_grade,hotel$ser_grade,hotel$fac_grade,hotel$loc_grade)
names(grade) <- c("卫生","服务","设施","位置")
cor_grade <- cor(grade)                                #计算相关系数矩阵
corrplot(cor_grade,                                    #相关系数矩阵可视化
col         = NULL,
type        = "full",                         #图形为全部填充
order       = "AOE",                          #排序按照特征向量角序(AOE)方式
method      = "color",                        #颜色填充方式
tl.col      = "lightsteelblue4",              #字体颜色为lightsteelblue4
tl.cex      = 1,                              #字体大小为1
cl.pos      = "n",                            #图例(位置)，不需要图例
addCoef.col = "grey")                         #系数颜色为grey
#(3)评分因素箱线图
par(mfrow = c(1,2))                                    #1X2画布
total_gradeCut <- cut(hotel$total_grade, c(0,4.5,Inf)) #分组函数
boxplot(log(hotel$price) ~ total_gradeCut,             #画箱线图
col     = c("lightsteelblue4"),                #颜色为lightsteelblue4
ylab    = "酒店房价(取对数)",                     #y轴标签
xlab    = "位置评分",                            #x轴标签
names   = c("低评分","高评分"))                   #分组(4.5分以上为高评分，4.5分一下为低评分)
evaluateCut <- cut(hotel$evaluate, c(0,median(hotel$evaluate),Inf))
boxplot(log(hotel$price) ~ evaluateCut,                #画箱线图
col     = c("lightsteelblue4"),                #颜色为lightsteelblue4
ylab    = "酒店房价(取对数)",                     #y轴标签
xlab    = "评价数",                             #x轴标签
names   = c("低评价数","高评价数"))               #分组(4.5分以上为高评分，4.5分一下为低评分)
#(4)评分因素数字特征
mean(hotel$hyg_grade)                                  #计算卫生评分均值
mean(hotel$ser_grade)                                  #计算服务评分均值
mean(hotel$fac_grade)                                  #计算设施评分均值
mean(hotel$loc_grade)                                  #计算位置评分均值
#3.对数线性回归模型
#(1)对数线性回归模型建立
lm_price <- lm(log(price) ~ area + type + timeCut + evaluate + total_grade + school + company + trip ,data = hotel)
lm_price <- step(lm_price)                             #AIC方法进行变量选择
summary(lm_price)                                      #输出模型结果
#(2)对数回归模型检验
par(mfrow = c(2,2))                                    #2X2画布
plot(lm_price,which = c(1,2,3,4))                      #模型诊断，包括残差图、QQ图、cook距离
round(vif(lm_price),2)                                 #计算对数回归模型的方差膨胀因子
install.packages(zoo)
